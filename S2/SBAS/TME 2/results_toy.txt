
read_fasta('testToy.fasta')
['ACCD', 'A-CD']

read_blosum('BLOSUM62.txt', q)
[[ 4. -1. -2. -2.  0. -1. -1.  0. -2. -1. -1. -1. -1. -2. -1.  1.  0. -3.
  -2.  0. -2. -1.  0.]
 [-1.  5.  0. -2. -3.  1.  0. -2.  0. -3. -2.  2. -1. -3. -2. -1. -1. -3.
  -2. -3. -1.  0. -1.]
 [-2.  0.  6.  1. -3.  0.  0.  0.  1. -3. -3.  0. -2. -3. -2.  1.  0. -4.
  -2. -3.  3.  0. -1.]
 [-2. -2.  1.  6. -3.  0.  2. -1. -1. -3. -4. -1. -3. -3. -1.  0. -1. -4.
  -3. -3.  4.  1. -1.]
 [ 0. -3. -3. -3.  9. -3. -4. -3. -3. -1. -1. -3. -1. -2. -3. -1. -1. -2.
  -2. -1. -3. -3. -2.]
 [-1.  1.  0.  0. -3.  5.  2. -2.  0. -3. -2.  1.  0. -3. -1.  0. -1. -2.
  -1. -2.  0.  3. -1.]
 [-1.  0.  0.  2. -4.  2.  5. -2.  0. -3. -3.  1. -2. -3. -1.  0. -1. -3.
  -2. -2.  1.  4. -1.]
 [ 0. -2.  0. -1. -3. -2. -2.  6. -2. -4. -4. -2. -3. -3. -2.  0. -2. -2.
  -3. -3. -1. -2. -1.]
 [-2.  0.  1. -1. -3.  0.  0. -2.  8. -3. -3. -1. -2. -1. -2. -1. -2. -2.
   2. -3.  0.  0. -1.]
 [-1. -3. -3. -3. -1. -3. -3. -4. -3.  4.  2. -3.  1.  0. -3. -2. -1. -3.
  -1.  3. -3. -3. -1.]
 [-1. -2. -3. -4. -1. -2. -3. -4. -3.  2.  4. -2.  2.  0. -3. -2. -1. -2.
  -1.  1. -4. -3. -1.]
 [-1.  2.  0. -1. -3.  1.  1. -2. -1. -3. -2.  5. -1. -3. -1.  0. -1. -3.
  -2. -2.  0.  1. -1.]
 [-1. -1. -2. -3. -1.  0. -2. -3. -2.  1.  2. -1.  5.  0. -2. -1. -1. -1.
  -1.  1. -3. -1. -1.]
 [-2. -3. -3. -3. -2. -3. -3. -3. -1.  0.  0. -3.  0.  6. -4. -2. -2.  1.
   3. -1. -3. -3. -1.]
 [-1. -2. -2. -1. -3. -1. -1. -2. -2. -3. -3. -1. -2. -4.  7. -1. -1. -4.
  -3. -2. -2. -1. -2.]
 [ 1. -1.  1.  0. -1.  0.  0.  0. -1. -2. -2.  0. -1. -2. -1.  4.  1. -3.
  -2. -2.  0.  0.  0.]
 [ 0. -1.  0. -1. -1. -1. -1. -2. -2. -1. -1. -1. -1. -2. -1.  1.  5. -2.
  -2.  0. -1. -1.  0.]
 [-3. -3. -4. -4. -2. -2. -3. -2. -2. -3. -2. -3. -1.  1. -4. -3. -2. 11.
   2. -3. -4. -3. -2.]
 [-2. -2. -2. -3. -2. -1. -2. -3.  2. -1. -1. -2. -1.  3. -3. -2. -2.  2.
   7. -1. -3. -2. -1.]
 [ 0. -3. -3. -3. -1. -2. -2. -3. -3.  3.  1. -2.  1. -1. -2. -2.  0. -3.
  -1.  4. -3. -2. -1.]
 [-2. -1.  3.  4. -3.  0.  1. -1.  0. -3. -4.  0. -3. -3. -2.  0. -1. -4.
  -3. -3.  4.  1. -1.]
 [-1.  0.  0.  1. -3.  3.  4. -2.  0. -3. -3.  1. -1. -3. -1.  0. -1. -3.
  -2. -2.  1.  4. -1.]
 [ 0. -1. -1. -1. -2. -1. -1. -1. -1. -1. -1. -1. -1. -1. -2.  0.  0. -2.
  -1. -1. -1. -1. -1.]]

indentite_calcul(testAln[0], testAln[1], gap_open, gap_ext, matr_62, aa)
0.75 0.75 14.0

empty_occ(aa)
{('A', 'A'): 0, ('A', 'B'): 0, ('A', 'C'): 0, ('B', 'B'): 0, ('B', 'C'): 0, ('C', 'C'): 0}

readAlnFile('blockToy.dat')
[['A', 'B', 'C', 'C', 'B'], ['A', 'C', 'A', 'B', 'A'], ['C', 'B', 'C', 'C', 'B'], ['A', 'C', 'B', 'B', 'B']]

occ = occurrences(aln, aa)
{('A', 'A'): 3, ('A', 'B'): 4, ('A', 'C'): 5, ('B', 'B'): 5, ('B', 'C'): 10, ('C', 'C'): 3}

total(occurrences(aln, aa))
30

p = compute_p(occ, aa)
[0.25, 0.4, 0.35]

compute_S(occ, aa, p)
[[0.6780719051126377, -0.5849625007211563, -0.07038932789139785], [-0.5849625007211563, 0.058893689053568, 0.2515387669959644], [-0.07038932789139785, 0.2515387669959644, -0.2927817492278456]]
